class 학생:
    def __init__(self, 이름, 나이, 성적):
        self.이름 = 이름
        self.나이 = 나이
        self.성적 = 성적
    
    def 정보출력(self):
        print(f"이름: {self.이름}, 나이: {self.나이}, 성적: {self.성적}")
    
    # 철수가 만든 방식: 딕셔너리로 데이터를 준비
    @classmethod
    def 딕셔너리에서_생성(cls, 데이터):
        return cls(데이터['이름'], 데이터['나이'], 데이터['성적'])
    
    # 영희가 만든 방식: 리스트로 데이터를 준비
    @classmethod
    def 리스트에서_생성(cls, 데이터):
        return cls(데이터[0], 데이터[1], 데이터[2])
    
    # 민수가 만든 방식: 문자열로 데이터를 준비 (쉼표로 구분)
    @classmethod
    def 문자열에서_생성(cls, 데이터):
        이름, 나이, 성적 = 데이터.split(',')
        return cls(이름.strip(), int(나이.strip()), int(성적.strip()))
    
    # 지영이가 만든 방식: 파일에서 데이터를 읽어오기
    @classmethod
    def 파일에서_생성(cls, 파일경로):
        # 실제로는 파일을 읽어와야 하지만, 예시로 간단히 표현
        # with open(파일경로, 'r') as f:
        #     데이터 = f.read()
        데이터 = "김철수,16,85"  # 파일에서 읽어온 것처럼 가정
        return cls.문자열에서_생성(데이터)
    
    # 수현이가 만든 방식: 기본값이 있는 생성
    @classmethod
    def 기본값으로_생성(cls, 이름):
        return cls(이름, 15, 0)  # 나이는 15세, 성적은 0점으로 기본설정함. 

# 사용 예시
print("=== 각자 다른 방식으로 만든 데이터들 ===")

# 철수의 방식
철수_데이터 = {'이름': '박철수', '나이': 16, '성적': 90}
학생1 = 학생.딕셔너리에서_생성(철수_데이터)
학생1.정보출력()

# 영희의 방식
영희_데이터 = ['김영희', 15, 88]
학생2 = 학생.리스트에서_생성(영희_데이터)
학생2.정보출력()

# 민수의 방식
민수_데이터 = "이민수, 17, 92"
학생3 = 학생.문자열에서_생성(민수_데이터)
학생3.정보출력()

# 지영이의 방식
학생4 = 학생.파일에서_생성("student.txt")
학생4.정보출력()

# 수현이의 방식
학생5 = 학생.기본값으로_생성("최수현")
학생5.정보출력()

print("\n=== 모든 학생들을 리스트로 관리 ===")
모든_학생 = [학생1, 학생2, 학생3, 학생4, 학생5]

for 학생 in 모든_학생:
    학생.정보출력()